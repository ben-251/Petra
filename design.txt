
PRERUN SYNTAX CHECK
1.loop through every line in the file
2. check if the line has a keyword.
3. if it does, then check if it has anything else,
4.  if it does, 
        then return extraWordError or something
5. if not, 
    add the line to an array called ActiveLines or something
    add the keyword position to an array called Keyword-positions #to locate them faster?

RUN
1. loop through ActiveLines
2. for each number of line, go to that line and run the function called

2:
	FOR Prints:
		If a line starts with `say(`
		check if the last character is `)`
		set a varible to everything between them
		send that variable to a `evaluate_expression(exp)` function
		print the result
	    
	FOR Variables: #var(var_name,var_value)
		store new name into array var_names, unless already in var_names
		def get_value(value):
			check if the value has quptes
			check for quotes
			check for int 
			check for float

			if the value has quotes:
			    store as string
			elif its an int:
			    store as int
			elif its a float:
			    store as float
			else:
			     print "SyntaxError: Variable - [variable_name]. "[value] is not a recognised
			     value" #something like that

		find name from var_names and get_value(value)
	
	FOR input: # input(var_name,message)
		get message from statemnent
		get_var_name
		
		set var_value to input("message")
		run var(var_name,var_value)
		
FUNCTION DEFINITIONS
def evaluate_expression(exp):
	// each of these shold return the value if true, not running any further code
	check if string // if it starts and ends with quotes
	check if number // if every character is a number
	.
	.
	.
	check if it is in the `vars` dictionary
	// If all checks have faled
	print "SyntaxError: Input not a recognised value" #something like that
	exit()
